import os

POSTGRES_CONNECTION_STRING = os.environ["POSTGRES_CONNECTION_STRING"]
AWS_ACCESS_KEY_ID = os.environ["AWS_ACCESS_KEY_ID"]
AWS_SECRET_ACCESS_KEY = os.environ["AWS_SECRET_ACCESS_KEY"]

EXPECTED_SENSORS_FILENAME = os.environ.get("EXPECTED_SENSORS_FILENAME", "expectedSensors.json")
STORAGE_BUCKET_NAME = os.environ["STORAGE_BUCKET_NAME"]

MAX_LATE_FILE_TIME = os.environ.get("MAX_FILE_LATE_TIME", 7)
NOTIFICATION_CLEANUP_INTERVAL = os.environ.get("NOTIFICATION_CLEANUP_INTERVAL", 30)

S3_ENDPOINT_URL = os.environ.get("S3_ENDPOINT_URL")

IS_PROD = os.environ.get("IS_PROD", "False")

DEBUG_LOGS = os.environ.get("DEBUG_LOGS", "false")

# File Notifications
FILE_NOTIFICATION_TOPIC_NAME = os.environ["FILE_NOTIFICATION_TOPIC_NAME"]
FILE_NOTIFICATION_KAFKA_BOOTSTRAP_SERVERS = os.environ["FILE_NOTIFICATION_KAFKA_BOOTSTRAP_SERVERS"]
FILE_NOTIFICATION_KAFKA_GROUP_ID = os.environ["FILE_NOTIFICATION_KAFKA_GROUP_ID"]

# End Readout
SHOULD_RUN_END_READOUT_LISTENER = os.environ.get("SHOULD_RUN_END_READOUT_LISTENER")
END_READOUT_TOPIC_NAME = os.environ["END_READOUT_TOPIC_NAME"]
END_READOUT_SCHEMA_REGISTRY = os.environ.get("END_READOUT_SCHEMA_REGISTRY", None)
END_READOUT_KAFKA_BOOTSTRAP_SERVERS = os.environ["END_READOUT_KAFKA_BOOTSTRAP_SERVERS"]
END_READOUT_KAFKA_GROUP_ID = os.environ["END_READOUT_KAFKA_GROUP_ID"]
END_READOUT_SASL_USERNAME = os.environ.get("END_READOUT_SASL_USERNAME", "")
END_READOUT_SASL_PASSWORD = os.environ.get("END_READOUT_SASL_PASSWORD", "")
END_READOUT_SASL_MECHANISM = os.environ.get("END_READOUT_SASL_MECHANISM", "")
END_READOUT_SECURITY_PROTOCOL = os.environ.get("END_READOUT_SECURITY_PROTOCOL", "")
